# stock_config.py
"""
統一的股票配置模組
從 stock_split_config.json 自動生成
包含訓練/驗證/測試分割配置
"""
import json
from pathlib import Path

# 完整股票清單 (180支)
ALL_STOCKS = [
    # Group A - 半導體‧電子供應鏈 (60支)
    "2330", "2317", "2454", "2303", "2408", "2412", "2382", "2357", "2379", "3034",
    "3008", "4938", "2449", "2383", "2356", "3006", "3661", "2324", "8046", "3017",
    "6121", "3037", "3014", "3035", "3062", "3030", "3529", "5443", "2337", "8150",
    "3293", "3596", "2344", "2428", "2345", "2338", "6202", "5347", "3673", "3105",
    "6231", "6669", "4961", "4967", "6668", "4960", "3528", "6147", "3526", "6547",
    "8047", "3227", "4968", "5274", "6415", "6414", "6770", "2331", "6290", "2342",
    # Group B - 傳產／原物料＆運輸 (60支)
    "2603", "2609", "2615", "2610", "2618", "2637", "2606", "2002", "2014", "2027",
    "2201", "1201", "1216", "1301", "1303", "1326", "1710", "1717", "1722", "1723",
    "1402", "1409", "1434", "1476", "2006", "2049", "2105", "2106", "2107", "1605",
    "1609", "1608", "1612", "2308", "1727", "1730", "1101", "1102", "1108", "1210",
    "1215", "1802", "1806", "1810", "1104", "1313", "1314", "1310", "5608", "5607",
    "8105", "8940", "5534", "5609", "5603", "2023", "2028", "2114", "9933", "2501",
    # Group C - 金融‧內需消費／綠能生技 (60支)
    "2880", "2881", "2882", "2883", "2884", "2885", "2886", "2887", "2888", "2890",
    "2891", "2892", "2812", "3665", "2834", "2850", "2801", "2836", "2845", "4807",
    "3702", "3706", "4560", "8478", "4142", "4133", "6525", "6548", "6843", "1513",
    "1514", "1516", "1521", "1522", "1524", "1533", "1708", "3019", "5904", "5906",
    "5902", "6505", "6806", "6510", "2207", "2204", "2231", "1736", "4105", "4108",
    "4162", "1909", "1702", "9917", "1217", "1218", "1737", "1783", "3708", "1795"
]

# 股票分組
STOCK_GROUPS = {
    'group_A': [
        "2330", "2317", "2454", "2303", "2408", "2412", "2382", "2357", "2379", "3034",
        "3008", "4938", "2449", "2383", "2356", "3006", "3661", "2324", "8046", "3017",
        "6121", "3037", "3014", "3035", "3062", "3030", "3529", "5443", "2337", "8150",
        "3293", "3596", "2344", "2428", "2345", "2338", "6202", "5347", "3673", "3105",
        "6231", "6669", "4961", "4967", "6668", "4960", "3528", "6147", "3526", "6547",
        "8047", "3227", "4968", "5274", "6415", "6414", "6770", "2331", "6290", "2342"
    ],
    'group_B': [
        "2603", "2609", "2615", "2610", "2618", "2637", "2606", "2002", "2014", "2027",
        "2201", "1201", "1216", "1301", "1303", "1326", "1710", "1717", "1722", "1723",
        "1402", "1409", "1434", "1476", "2006", "2049", "2105", "2106", "2107", "1605",
        "1609", "1608", "1612", "2308", "1727", "1730", "1101", "1102", "1108", "1210",
        "1215", "1802", "1806", "1810", "1104", "1313", "1314", "1310", "5608", "5607",
        "8105", "8940", "5534", "5609", "5603", "2023", "2028", "2114", "9933", "2501"
    ],
    'group_C': [
        "2880", "2881", "2882", "2883", "2884", "2885", "2886", "2887", "2888", "2890",
        "2891", "2892", "2812", "3665", "2834", "2850", "2801", "2836", "2845", "4807",
        "3702", "3706", "4560", "8478", "4142", "4133", "6525", "6548", "6843", "1513",
        "1514", "1516", "1521", "1522", "1524", "1533", "1708", "3019", "5904", "5906",
        "5902", "6505", "6806", "6510", "2207", "2204", "2231", "1736", "4105", "4108",
        "4162", "1909", "1702", "9917", "1217", "1218", "1737", "1783", "3708", "1795"
    ]
}

# 訓練/驗證/測試分割 (從 stock_split_config.json)
STOCK_SPLITS = {
    'train': [
        "3673", "3035", "6415", "4938", "3661", "6121", "6414", "6290", "2428", "3017",
        "3034", "6202", "3596", "4960", "3293", "6547", "2303", "3037", "8047", "2408",
        "8150", "3008", "2342", "3014", "6669", "3062", "2330", "6668", "3030", "4968",
        "8046", "2337", "3105", "3529", "3526", "2449", "2338", "4961", "2344", "5274",
        "2383", "3528", "2308", "1608", "2603", "5607", "9933", "1710", "5608", "1810",
        "1723", "1730", "1609", "1201", "2027", "2610", "1314", "2106", "2107", "2049",
        "2105", "1102", "2609", "1612", "1409", "2002", "1727", "2501", "1402", "2014",
        "5534", "1104", "8940", "1326", "1108", "8105", "1802", "1301", "1434", "2114",
        "2201", "5603", "1605", "1717", "6510", "1783", "2845", "1218", "2886", "4807",
        "4560", "5906", "2892", "1702", "2881", "6525", "2882", "2812", "2850", "1909",
        "2231", "4108", "2204", "3665", "6806", "6843", "6505", "3702", "4105", "3708",
        "2836", "1514", "2207", "4162", "3706", "2880", "1737", "1522", "1513", "1708",
        "4142", "2884", "5904", "9917", "2891", "5902"
    ],
    'validation': [
        "2331", "2454", "5443", "5347", "2412", "2345", "3227", "4967", "2382", "2006",
        "2606", "1310", "2637", "1722", "1303", "1806", "2615", "2618", "2890", "2887",
        "2883", "2885", "1516", "1521", "2888", "2834", "8478"
    ],
    'test': [
        "6770", "2379", "2356", "3006", "2324", "6147", "2317", "2357", "6231", "1313",
        "1216", "1101", "1476", "2023", "2028", "1210", "1215", "5609", "4133", "1217",
        "6548", "3019", "1795", "2801", "1524", "1533", "1736"
    ]
}

# 向後相容
STOCK_IDS = ALL_STOCKS

# 分組別股票清單
GROUP_A = STOCK_GROUPS['group_A']
GROUP_B = STOCK_GROUPS['group_B'] 
GROUP_C = STOCK_GROUPS['group_C']

# 分割別股票清單
TRAIN_STOCKS = STOCK_SPLITS['train']
VALIDATION_STOCKS = STOCK_SPLITS['validation']
TEST_STOCKS = STOCK_SPLITS['test']

def get_all_stocks():
    """獲取所有股票代碼"""
    return ALL_STOCKS.copy()

def get_group_stocks(group_name):
    """獲取指定組別的股票代碼"""
    return STOCK_GROUPS.get(group_name, []).copy()

def get_split_stocks(split_name):
    """獲取指定分割的股票代碼"""
    return STOCK_SPLITS.get(split_name, []).copy()

def get_stock_count():
    """獲取股票總數"""
    return len(ALL_STOCKS)

def get_split_info():
    """獲取分割資訊"""
    return {
        'train': len(TRAIN_STOCKS),
        'validation': len(VALIDATION_STOCKS), 
        'test': len(TEST_STOCKS),
        'total': len(TRAIN_STOCKS) + len(VALIDATION_STOCKS) + len(TEST_STOCKS)
    }

def validate_splits():
    """驗證分割配置"""
    all_split_stocks = TRAIN_STOCKS + VALIDATION_STOCKS + TEST_STOCKS
    
    # 檢查重複
    if len(set(all_split_stocks)) != len(all_split_stocks):
        return False, "分割間有重複股票"
    
    # 檢查總數
    if len(all_split_stocks) != 180:
        return False, f"分割總數不正確: {len(all_split_stocks)}/180"
    
    # 檢查是否包含所有股票
    missing = set(ALL_STOCKS) - set(all_split_stocks)
    if missing:
        return False, f"缺少股票: {missing}"
    
    return True, "分割配置正確"

if __name__ == "__main__":
    print(f"總股票數: {get_stock_count()}")
    
    print("\n📊 分組統計:")
    for group_name in STOCK_GROUPS:
        print(f"  {group_name}: {len(get_group_stocks(group_name))} 支")
    
    print("\n🎯 分割統計:")
    split_info = get_split_info()
    for split_name, count in split_info.items():
        if split_name != 'total':
            percentage = (count / split_info['total']) * 100
            print(f"  {split_name}: {count} 支 ({percentage:.1f}%)")
    
    print(f"\n✅ 分割驗證:")
    is_valid, message = validate_splits()
    print(f"  {message}")